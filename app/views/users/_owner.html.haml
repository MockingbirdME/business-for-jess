.row
  %h3.text-center
    Today's Appointments
  - today_appointments = Appointment.where(start_time: Date.current.to_datetime.midnight..(Date.current+1.days).to_datetime.midnight)
  - if today_appointments.empty?
    .row
      %h5
        No appointments booked for today
  -else
    .row
      .col-xs-3
        %h4
          Appointment Type
      .col-xs-3
        %h4
          Time
      .col-xs-6
        %h4
          Details
    - today_appointments.order(:appointment_type).each do |app|
      .row
        .col-xs-3
          %h5
            - case app.appointment_type
              -when 'dog_walking'
                Dog Walking
              -when 'small_animal_hotel'
                Sm Animal Hotel
              -when 'in_home_animal_care'
                In Home Pet Care

        .col-xs-3
          %h6.small
            - if app.appointment_type == 'dog_walking'
              = app.start_time.strftime("%m/%d/%g at %I:%M%p")
            - else
              = "#{app.start_time.strftime('%m/%d/%g')} - #{(app.start_time + (app.duration.days)).strftime('%m/%d/%g')}"
        .col-xs-6
          %h6.small
            = app.total_number_of_animals
            - if app.appointment_type == 'dog_walking'
              dogs for
              = app.duration
              minutes
            -else
              animals for
              = app.duration
              days
            %br
            notes:
            = app.details
.row.options
  .col-xs-4
    = button_tag "show future appointments", class: 'btn btn-info', id: 'show_future_appointments'
    = button_tag "hide future appointments", class: 'btn btn-secondary', id: 'hide_future_appointments'
  .col-xs-4
    = button_tag "show past appointments", class: 'btn btn-info', id: 'show_past_appointments'
    = button_tag "hide past appointments", class: 'btn btn-secondary', id: 'hide_past_appointments'
  .col-xs-4
    = button_tag "show \n messages", class: 'btn btn-info', id: 'show_messages'
    = button_tag "hide \n messages", class: 'btn btn-secondary', id: 'hide_messages'

.row#future_appointments_display
  %h3.text-center
    Upcoming Appointments
  - future_appointments = Appointment.where(start_time: (Date.current+1.days).to_datetime.midnight..(Date.current+100.years).to_datetime.midnight)
  - if future_appointments.empty?
    .row
      %h5
        There are no upcomming appointments
  -else
    .row
      .col-xs-3
        %h4
          Appointment Type
      .col-xs-3
        %h4
          Time
      .col-xs-5
        %h4
          Details
      .col-xs-1

    - future_appointments.order(:start_time).each do |app|
      .row{id:"appointment-#{app.id}"}
        .col-xs-3
          %h5
            - case app.appointment_type
              -when 'dog_walking'
                Dog Walking
              -when 'small_animal_hotel'
                Sm Animal Hotel
              -when 'in_home_animal_care'
                In Home Pet Care
              -when 'afternoon_off'
                Afternoon Off
              -when 'day_off'
                Day Off

        .col-xs-3
          %h6.small
            - if app.appointment_type == 'dog_walking'
              = app.start_time.strftime("%m/%d/%g at %I:%M%p")
            - elsif (app.appointment_type == 'in_home_animal_care') || app.appointment_type == 'afternoon_off' || app.appointment_type == 'day_off'
              = "#{app.start_time.strftime('%m/%d/%g')}"
              - if app.duration > 1
                = "- #{(app.start_time + (app.duration.days-1)).strftime('%m/%d/%g')}"
            - else
              = "#{app.start_time.strftime('%m/%d/%g')} - #{(app.start_time + (app.duration.days)).strftime('%m/%d/%g')}"

        .col-xs-5
          %h6.small
            - case
              -when app.appointment_type == 'dog_walking'
                = app.total_number_of_animals
                dogs for
                = app.duration
                minutes
              -when app.appointment_type == 'small_animal_hotel'
                = app.total_number_of_animals
                animals for
                = app.duration
                nights(s)
              -when app.appointment_type == 'in_home_animal_care'
                = app.total_number_of_animals
                animals for
                = app.duration
                day(s)
              -else
                for
                = app.duration
                day(s)
            %br
            notes:
            = app.details
        .col-xs-1
          - if app.user == current_user
            = link_to 'cancel', user_appointment_path(@user, id: app.id), method: :delete, class: 'pull-right', remote: true
.row#past_appointments_display
  %h3.text-center
    Past Appointments
  - past_appointments = Appointment.where(start_time: (Date.current-100.years).to_datetime.midnight..Date.current.to_datetime.midnight)
  - if past_appointments.empty?
    .row
      %h5
        There are no past appointments
  -else
    .row
      .col-xs-3
        %h4
          Appointment Type
      .col-xs-3
        %h4
          Time
      .col-xs-6
        %h4
          Details
    - past_appointments.order(:start_time).reverse.each do |app|
      .row
        .col-xs-3
          %h5
            - case app.appointment_type
              -when 'dog_walking'
                Dog Walking
              -when 'small_animal_hotel'
                Sm Animal Hotel
              -when 'in_home_animal_care'
                In Home Pet Care

        .col-xs-3
          %h6.small
            - if app.appointment_type == 'dog_walking'
              = app.start_time.strftime("%m/%d/%g at %I:%M%p")
            - else
              = "#{app.start_time.strftime('%m/%d/%g')} - #{(app.start_time + (app.duration.days)).strftime('%m/%d/%g')}"
        .col-xs-6
          %h6.small
            = app.total_number_of_animals
            - if app.appointment_type == 'dog_walking'
              dogs for
              = app.duration
              minutes
            -else
              animals for
              = app.duration
              days
            %br
            notes:
            = app.details
.row#messages_display
  %h3.text-center
    Messages
  - messages = Message.all
  - if messages.empty?
    .row
      %h5
        No messages have been sent
  -else
    .row
      .col-xs-3
        %h4
          Sender
      .col-xs-3
        %h4
          Date
      .col-xs-6
        %h4
          Message text
    - messages.order(:created_at).reverse.each do |msg|
      .row
        .col-xs-3
          %h5
            - if msg.user != nil
              = link_to "#{msg.response_name}", user_path(msg.user)
            - elsif msg.response_name != ""
              =msg.response_name
            - else
              Guest
        .col-xs-3
          %h6.small
            = msg.created_at
        .col-xs-6
          %h6.small
            = msg.body
            %br
          %h6.small#msg_respond_by
            - if msg.response_type != 'none_required'
              respond by
              = msg.response_type
              \:
              - if msg.response_type == 'email'
                = msg.response_email
              - elsif (msg.response_type == 'phone') || (msg.response_type == 'text')
                = msg.response_phone
%br

.buttons.text-center
  %button.btn.btn-primary{:type => "button", :data => {:toggle => "modal", :target => "#owner_calendar_modal"}} Calendar
  - if @user == current_user
    = link_to 'Book an appointment or schedule time off', new_user_appointment_path(@user), class: 'btn btn-success'
.modal#owner_calendar_modal
  .modal-content
    .modal-body
      %button.btn.btn-secondary{ :type => 'button', :data => {:dismiss => "modal"}, class: 'pull-right'} x
      .row#calendar_view
        - today = DateTime.current
        - if today.cwday !=7
          -today.cwday.times do |n|
            - this_day = (today-(((today.cwday).day)-(n.day)))
            .owner_day
              %h6.owner_past_date
                = this_day.strftime("%m/%d")
              - if Appointment.dog_walking_display_for_owner(this_day).empty?
                %h6.owner_past_date
                  No Dog Walking Appointments
              - else
                %h6.small
                  Dog Walking:
                %h6.owner_past_date
                  - Appointment.dog_walking_display_for_owner(this_day).each do |n|
                    = n.start_time.strftime("%l:%M")
                    \-
                    = (n.start_time + n.duration.minutes).strftime("%l:%M")
              %h6.small
                Small Animal Hotel:
              %h6.owner_past_date
                - if Appointment.hotel_checkins(this_day).empty?
                  No checkins
                - else
                  = Appointment.hotel_checkins(this_day).count
                  checkin(s)
              %h6.owner_past_date
                - if Appointment.hotel_guests(this_day).empty?
                  No overnight guests
                - else
                  = Appointment.hotel_guests(this_day).count
                  separate guest group(s)
              %h6.small
                In Home Care:
              %h6.owner_past_date
                - if Appointment.care_apps(this_day).empty?
                  no appointments
                - else
                  = Appointment.care_apps(this_day).count
                  appointment(s)
        - 14.times do |n|
          - this_day = (today+(n.days))
          .owner_day
            %h6.owner_date
              = this_day.strftime("%m/%d")

            - if Appointment.dog_walking_display_for_owner(this_day).empty?
              %h6.owner_date
                No Dog Walking Appointments
            - else
              %h6.small
                Dog Walking:
              %h6.owner_date
                - Appointment.dog_walking_display_for_owner(this_day).each do |n|
                  = n.start_time.strftime("%l:%M")
                  \-
                  = (n.start_time + n.duration.minutes).strftime("%l:%M")
            %h6.small
              Small Animal Hotel:
            %h6.owner_date
              - if Appointment.hotel_checkins(this_day).empty?
                No checkins
              - else
                = Appointment.hotel_checkins(this_day).count
                checkin(s)
            %h6.owner_date
              - if Appointment.hotel_guests(this_day).empty?
                No overnight guests
              - else
                = Appointment.hotel_guests(this_day).count
                separate guest group(s)
            %h6.small
              In Home Care:
            %h6.owner_date
              - if Appointment.care_apps(this_day).empty?
                no appointments
              - else
                = Appointment.care_apps(this_day).count
                appointment(s)
= javascript_include_tag 'users'
